[{"/home/project/med_appt/src/index.js":"1","/home/project/med_appt/src/App.js":"2","/home/project/med_appt/src/reportWebVitals.js":"3","/home/project/med_appt/src/Components/BookingConsultation.js":"4","/home/project/med_appt/src/Components/Landing_Page/Landing_Page.js":"5","/home/project/med_appt/src/Components/Sign_Up/Sign_Up.js":"6","/home/project/med_appt/src/Components/Navbar/Navbar.js":"7","/home/project/med_appt/src/Components/Login/Login.js":"8","/home/project/med_appt/src/Components/FindDoctorSearch/FindDoctorSearch.js":"9","/home/project/med_appt/src/Components/Notification/Notification.js":"10","/home/project/med_appt/src/Components/Instant Consultation/InstantConsultation.js":"11","/home/project/med_appt/src/config.js":"12","/home/project/med_appt/src/Components/DoctorCard/DoctorCard.js":"13","/home/project/med_appt/src/Components/AppointmentForm/AppointmentForm.js":"14","/home/project/med_appt/src/Components/ReviewForm/ReviewForm.js":"15","/home/project/med_appt/src/Components/ProfileCard/ProfileCard.js":"16","/home/project/med_appt/src/Components/ReportsLayout/ReportsLayout.js":"17"},{"size":535,"mtime":1699760096839,"results":"18","hashOfConfig":"19"},{"size":1390,"mtime":1699760096839,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1699760096839,"results":"21","hashOfConfig":"19"},{"size":2930,"mtime":1699760096839,"results":"22","hashOfConfig":"19"},{"size":1048,"mtime":1699760096839,"results":"23","hashOfConfig":"19"},{"size":4214,"mtime":1699760096839,"results":"24","hashOfConfig":"19"},{"size":4010,"mtime":1699764187448,"results":"25","hashOfConfig":"19"},{"size":2714,"mtime":1699760096839,"results":"26","hashOfConfig":"19"},{"size":2596,"mtime":1699760096839,"results":"27","hashOfConfig":"19"},{"size":2114,"mtime":1699770131312,"results":"28","hashOfConfig":"19"},{"size":3046,"mtime":1699760096839,"results":"29","hashOfConfig":"19"},{"size":95,"mtime":1699770386956,"results":"30","hashOfConfig":"19"},{"size":5333,"mtime":1699760096839,"results":"31","hashOfConfig":"19"},{"size":2482,"mtime":1699769928049,"results":"32","hashOfConfig":"19"},{"size":2855,"mtime":1699760096839,"results":"33","hashOfConfig":"19"},{"size":3885,"mtime":1699762656797,"results":"34","hashOfConfig":"19"},{"size":1673,"mtime":1699766424849,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kbdvma",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},"/home/project/med_appt/src/index.js",[],[],"/home/project/med_appt/src/App.js",["99","100","101","102"],[],"import React, { useEffect } from 'react';\n\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport Navbar from './Components/Navbar/Navbar';\nimport Landing_Page from './Components/Landing_Page/Landing_Page';\nimport Sign_Up from './Components/Sign_Up/Sign_Up';\nimport Login from './Components/Login/Login';\nimport InstantConsultation from './Components/Instant Consultation/InstantConsultation';\nimport FindDoctorSearch from './Components/FindDoctorSearch/FindDoctorSearch';\nimport BookingConsultation from './Components/BookingConsultation';\nimport Notification from './Components/Notification/Notification';\nimport GiveReviews from './Components/ReviewForm/ReviewForm';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n        <BrowserRouter>\n          <Navbar/>\n          <Notification>\n              <Routes>\n              <Route path=\"/\" element={<Landing_Page/>}/>\n              <Route path=\"/Sign_Up/Sign_Up.html\" element={<Sign_Up/>}/>\n              <Route path=\"/Login/Login.html\" element={<Login/>}/>\n              <Route path=\"/instant-consultation\" element={<InstantConsultation />} />\n              <Route path=\"/search/doctors\" element={<FindDoctorSearch />} />\n              <Route path=\"/reviews\" element={<GiveReviews />} />\n              </Routes>\n              </Notification>\n        </BrowserRouter>\n       \n    </div>\n  );\n}\n\nexport default App;","/home/project/med_appt/src/reportWebVitals.js",[],[],"/home/project/med_appt/src/Components/BookingConsultation.js",["103","104"],[],"import React, { useEffect, useState } from 'react';\nimport './BookingConsultation.css';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport FindDoctorSearch from './FindDoctorSearch/FindDoctorSearch';\nimport DoctorCard from './DoctorCard/DoctorCard';\n\nconst BookingConsultation = () => {\n    const [searchParams] = useSearchParams();\n    const [doctors, setDoctors] = useState([]);\n    const [filteredDoctors, setFilteredDoctors] = useState([]);\n    const [isSearched, setIsSearched] = useState(false);\n    \n    const getDoctorsDetails = () => {\n        fetch('https://api.npoint.io/9a5543d36f1460da2f63')\n        .then(res => res.json())\n        .then(data => {\n            if (searchParams.get('speciality')) {\n                // window.reload()\n                const filtered = data.filter(doctor => doctor.speciality.toLowerCase() === searchParams.get('speciality').toLowerCase());\n\n                setFilteredDoctors(filtered);\n                \n                setIsSearched(true);\n                window.reload()\n            } else {\n                setFilteredDoctors([]);\n                setIsSearched(false);\n            }\n            setDoctors(data);\n        })\n        .catch(err => console.log(err));\n    }\n    const handleSearch = (searchText) => {\n\n        if (searchText === '') {\n            setFilteredDoctors([]);\n            setIsSearched(false);\n            } else {\n                \n            const filtered = doctors.filter(\n                (doctor) =>\n                // \n                doctor.speciality.toLowerCase().includes(searchText.toLowerCase())\n                \n            );\n                \n            setFilteredDoctors(filtered);\n            setIsSearched(true);\n            window.location.reload()\n        }\n    };\n    const navigate = useNavigate();\n    useEffect(() => {\n        getDoctorsDetails();\n        // const authtoken = sessionStorage.getItem(\"auth-token\");\n        // if (!authtoken) {\n        //     navigate(\"/login\");\n        // }\n    }, [searchParams])\n\n    return (\n        <center>\n            <div  className=\"searchpage-container\">\n            <FindDoctorSearch onSearch={handleSearch} />\n            <div className=\"search-results-container\">\n            {isSearched ? (\n                <center>\n                    <h2>{filteredDoctors.length} doctors are available {searchParams.get('location')}</h2>\n                    <h3>Book appointments with minimum wait-time & verified doctor details</h3>\n                    {filteredDoctors.length > 0 ? (\n                    filteredDoctors.map(doctor => <DoctorCard className=\"doctorcard\" {...doctor} key={doctor.name} />)\n                    ) : (\n                    <p>No doctors found.</p>\n                    )}\n                </center>\n                ) : (\n                ''\n                )}\n            </div>\n        </div>\n        </center>\n    )\n}\n\nexport default BookingConsultation","/home/project/med_appt/src/Components/Landing_Page/Landing_Page.js",["105"],[],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Landing_Page.css\";\n\nconst Landing_Page = () => {\n  return (\n    <section className=\"hero-section\">\n      <div>\n        <div data-aos=\"fade-up\" className=\"flex-hero\">\n            \n            <h1>\n              Your Health<br/>\n\n              <span className=\"text-gradient\">\n                \n                Our Responsibility\n              </span>\n            </h1>\n              <div className=\"blob-cont\">\n                  <div className=\"blue blob\"></div>\n              </div>\n              <div className=\"blob-cont\">\n                  <div className=\"blue1 blob\"></div>\n              </div>\n            <h4>\n              Lorem, ipsum dolor sit amet consectetur adipisicing elit. Eaque at quae ducimus. Suscipit omnis quibusdam non cum rem voluptatem!\n            </h4>\n            <a href=\"#services\">\n              <button className=\"button\">Get Started</button>\n            </a>\n        </div>\n\n      </div>\n    </section>\n  );\n};\n\nexport default Landing_Page;","/home/project/med_appt/src/Components/Sign_Up/Sign_Up.js",["106"],[],"import React, { useState } from 'react';\nimport './Sign_Up.css'\nimport { Link, useNavigate } from 'react-router-dom';\nimport { API_URL } from '../../config';\n\nconst Sign_Up = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [phone, setPhone] = useState('');\n    const [password, setPassword] = useState('');\n    const [showerr, setShowerr] = useState('');\n\n    const navigate = useNavigate();\n\n    const register = async (e) => {\n        e.preventDefault();\n\n        // API Call\n        const response = await fetch(`${API_URL}/api/auth/register`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                name: name,\n                email: email,\n                password: password,\n                phone: phone,\n\n            }),\n        });\n\n        const json = await response.json();\n\n        if (json.authtoken) {\n            sessionStorage.setItem(\"auth-token\", json.authtoken);\n            sessionStorage.setItem(\"name\", name);\n            // phone and email\n            sessionStorage.setItem(\"phone\", phone);\n            sessionStorage.setItem(\"email\", email);\n            // Redirect to home page\n            navigate(\"/\");   //on directing to home page you need to give logic to change login and signup buttons with name of the user and logout button where you have implemented Navbar functionality\n            window.location.reload();\n        } else {\n            if (json.errors) {\n                for (const error of json.errors) {\n                    setShowerr(error.msg);\n                }\n            } else {\n                setShowerr(json.error);\n            }\n        }\n    };\n\n    return (\n        <div className=\"container\" style={{marginTop:'5%'}}>\n        <div className=\"signup-grid\">\n        <div className=\"signup-form\">\n         <form method=\"POST\" onSubmit={register}>\n           <div className=\"form-group\">\n                <label htmlFor=\"email\">Email</label>\n                 <input value={email} onChange={(e) => setEmail(e.target.value)} type=\"email\" name=\"email\" id=\"email\" className=\"form-control\" placeholder=\"Enter your email\" aria-describedby=\"helpId\" />\n                 {showerr && <div className=\"err\" style={{ color: 'red' }}>{showerr}</div>}\n                        </div>\n                        <div className=\"form-group\">\n                <label htmlFor=\"name\">Name</label>\n                 <input value={name} onChange={(e) => setName(e.target.value)} type=\"name\" name=\"name\" id=\"name\" className=\"form-control\" placeholder=\"Enter your name\" aria-describedby=\"helpId\" />\n                 {showerr && <div className=\"err\" style={{ color: 'red' }}>{showerr}</div>}\n                        </div>\n                        <div className=\"form-group\">\n                <label htmlFor=\"phone\">Phone</label>\n                 <input value={phone} onChange={(e) => setPhone(e.target.value)} type=\"phone\" name=\"phone\" id=\"phone\" className=\"form-control\" placeholder=\"Enter your phone number\" aria-describedby=\"helpId\" />\n                 {showerr && <div className=\"err\" style={{ color: 'red' }}>{showerr}</div>}\n                        </div>\n                        <div className=\"form-group\">\n                <label htmlFor=\"phone\">Password</label>\n                 <input value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\" name=\"password\" id=\"password\" className=\"form-control\" placeholder=\"Enter your password\" aria-describedby=\"helpId\" />\n                 {showerr && <div className=\"err\" style={{ color: 'red' }}>{showerr}</div>}\n                        </div>\n                        <div class=\"btn-group\">\n                        <button type=\"submit\" class=\"btn btn-primary mb-2 mr-1 waves-effect waves-light\">Submit</button>\n                        <button type=\"reset\" class=\"btn btn-danger mb-2 waves-effect waves-light\">Reset</button>\n                    </div>\n\n         </form>\n         </div>\n         </div>\n         </div>\n //Sign up role is not stored in database. You can apply logic for this according to your react code.\n    );\n}\n\nexport default Sign_Up;","/home/project/med_appt/src/Components/Navbar/Navbar.js",[],[],"/home/project/med_appt/src/Components/Login/Login.js",["107"],[],"import React, { useState, useEffect } from 'react';\nimport \"./Login.css\";\n\nimport { Link, useNavigate } from 'react-router-dom';\nimport { API_URL } from '../../config';\n\nconst Login = () => {\n\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState('');\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (sessionStorage.getItem(\"auth-token\")) {\n      navigate(\"/\")\n    }\n  }, []);\n\n  const login = async (e) => {\n    e.preventDefault();\n    const res = await fetch(`${API_URL}/api/auth/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        // name: name,\n        email:email,\n        password: password,\n      }),\n    });\n\n    const json = await res.json();\n    if (json.authtoken) {\n      sessionStorage.setItem('auth-token', json.authtoken);\n  \n      sessionStorage.setItem('email', email);\n\n      navigate('/');\n      window.location.reload()\n    } else {\n      if (json.errors) {\n        for (const error of json.errors) {\n          alert(error.msg);\n        }\n      } else {\n        alert(json.error);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"login-grid\">\n          <div className=\"login-text\">\n            <h2>Login</h2>\n          </div>\n          <div className=\"login-text\">\n            Are you a new member? <span><Link to=\"/signup\" style={{ color: '#2190FF' }}> Sign Up Here</Link></span>\n          </div>\n          <br />\n          <div className=\"login-form\">\n            <form onSubmit={login}>\n              <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input value={email} onChange={(e) => setEmail(e.target.value)} type=\"email\" name=\"email\" id=\"email\" className=\"form-control\" placeholder=\"Enter your email\" aria-describedby=\"helpId\" />\n                    </div>\n                    <div className=\"form-group\">\n               <label htmlFor=\"password\">Password</label>\n               <input\n                 value={password}\n                 onChange={(e) => setPassword(e.target.value)}\n                 type=\"password\"\n                 name=\"password\"\n                 id=\"password\"\n                 className=\"form-control\"\n                 placeholder=\"Enter your password\"\n                 aria-describedby=\"helpId\"\n               />\n             </div>\n              <div className=\"btn-group\">\n                <button type=\"submit\" className=\"btn btn-primary mb-2 mr-1 waves-effect waves-light\">Login</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login;\n","/home/project/med_appt/src/Components/FindDoctorSearch/FindDoctorSearch.js",["108","109"],[],"import React, { useState } from 'react';\nimport './FindDoctorSearch.css';\nimport { useNavigate, Navigate } from 'react-router-dom';\n\n\nconst initSpeciality = [\n    'Dentist', 'Gynecologist/obstetrician', 'General Physician', 'Dermatologist', 'Ear-nose-throat (ent) Specialist', 'Homeopath', 'Ayurveda'\n]\n\nconst FindDoctorSearch = () => {\n    const [doctorResultHidden, setDoctorResultHidden] = useState(true);\n    const [searchDoctor, setSearchDoctor] = useState('');\n    const [specialities, setSpecialities] = useState(initSpeciality);\n    const navigate = useNavigate();\n    const handleDoctorSelect = (speciality) => {\n        setSearchDoctor(speciality);\n        setDoctorResultHidden(true);\n        navigate(`/instant-consultation?speciality=${speciality}`);\n        window.location.reload();\n    }\n    return (\n        <div className='finddoctor'>\n            <center>\n                <h1>Find a doctor and Consult instantly</h1>\n                <div>               <i style={{color:'#000000',fontSize:'20rem'}} className=\"fa fa-user-md\"></i>\n</div>                <div className=\"home-search-container\"  style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\n                    <div className=\"doctor-search-box\">\n                    {/* <p>Perform a search to see the results.</p> */}\n\n                        <input type=\"text\" className=\"search-doctor-input-box\" placeholder=\"Search doctors, clinics, hospitals, etc.\" onFocus={() => setDoctorResultHidden(false)} onBlur={() => setDoctorResultHidden(true)} value={searchDoctor} onChange={(e) => setSearchDoctor(e.target.value)} />\n                        \n                        <div className=\"findiconimg\"><img className='findIcon' src={process.env.PUBLIC_URL + '/images/search.svg'} alt=\"\"/></div>\n                        <div className=\"search-doctor-input-results\" hidden={doctorResultHidden}>\n                            {\n                                specialities.map(speciality => <div className=\"search-doctor-result-item\" key={speciality} onMouseDown={() => handleDoctorSelect(speciality)}>\n                                    <span><img src={process.env.PUBLIC_URL + '/images/search.svg'} alt=\"\" style={{height:\"10px\", width:\"10px\"}} width=\"12\" /></span>\n                                    <span>{speciality}</span>\n                                    <span>SPECIALITY</span>\n                                </div>)\n                            }\n                        </div>\n                    </div>\n                </div>\n            </center>\n        </div>\n    )\n}\n\nexport default FindDoctorSearch;","/home/project/med_appt/src/Components/Notification/Notification.js",["110","111"],[],"import React, { useEffect, useState } from 'react';\nimport Navbar from '../Navbar/Navbar';\nimport './Notification.css';\n\nconst Notification = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [doctorData, setDoctorData] = useState(null);\n  const [appointmentData, setAppointmentData] = useState(null);\n\n  useEffect(() => {\n    const storedUsername = sessionStorage.getItem('email');\n    //localStorage.removeItem('storedAppointments');\n    const storedDoctorData = JSON.parse(localStorage.getItem('storedAppointments'));\n    const storedAppointmentData = JSON.parse(localStorage.getItem('storedAppointments'));\n    //console.log(\"storedAppointmentData:\", storedAppointmentData);\n    \n    if (storedUsername) {\n      setIsLoggedIn(true);\n      setUsername(storedUsername);\n    }\n\n    if (storedDoctorData) {\n      setDoctorData(storedDoctorData);\n    }\n\n    if (storedAppointmentData) {\n        const relevantAppointment = storedAppointmentData[0];\n        console.log(\"relevantAppointment:\", relevantAppointment);\n        setAppointmentData(relevantAppointment);\n    }\n  }, []);\n  return (\n    <div>\n      <Navbar ></Navbar>\n      {children}\n      {isLoggedIn && appointmentData && (\n        <>\n          <div className=\"notification-container\">\n            <div className=\"notification-card\">\n              <h3 className=\"notification-title\">Appointment Details</h3>\n              <ul className=\"notification-list\">\n              <strong>Doctor:</strong> {appointmentData.doctorName}\n              <li><strong>Speciality:</strong> {appointmentData.doctorSpeciality}</li>\n              <li> <strong>Name:</strong> {appointmentData.name}</li>\n              <li> <strong>Phone Number:</strong> {appointmentData.phoneNumber}</li>\n              <li>  <strong>Date of Appointment:</strong> {appointmentData.appointmentDate}</li>\n              <li>  <strong>Time Slot:</strong> {appointmentData.selectedSlot}</li></ul>\n              \n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Notification;","/home/project/med_appt/src/Components/Instant Consultation/InstantConsultation.js",["112","113"],[],"import React, { useEffect, useState } from 'react';\r\nimport './InstantConsultation.css';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport FindDoctorSearch from '../../Components/FindDoctorSearch/FindDoctorSearch';\r\nimport DoctorCard from '../../Components/DoctorCard/DoctorCard';\r\n\r\nconst InstantConsultation = () => {\r\n    const [searchParams] = useSearchParams();\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [filteredDoctors, setFilteredDoctors] = useState([]);\r\n    const [isSearched, setIsSearched] = useState(false);\r\n    \r\n    const getDoctorsDetails = () => {\r\n        fetch('https://api.npoint.io/9a5543d36f1460da2f63')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (searchParams.get('speciality')) {\r\n                // window.reload()\r\n                const filtered = data.filter(doctor => doctor.speciality.toLowerCase() === searchParams.get('speciality').toLowerCase());\r\n\r\n                setFilteredDoctors(filtered);\r\n                \r\n                setIsSearched(true);\r\n                //window.reload()\r\n            } else {\r\n                setFilteredDoctors([]);\r\n                setIsSearched(false);\r\n            }\r\n            setDoctors(data);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n    const handleSearch = (searchText) => {\r\n\r\n        if (searchText === '') {\r\n            setFilteredDoctors([]);\r\n            setIsSearched(false);\r\n            } else {\r\n                \r\n            const filtered = doctors.filter(\r\n                (doctor) =>\r\n                // \r\n                doctor.speciality.toLowerCase().includes(searchText.toLowerCase())\r\n                \r\n            );\r\n                \r\n            setFilteredDoctors(filtered);\r\n            setIsSearched(true);\r\n            window.location.reload()\r\n        }\r\n    };\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        getDoctorsDetails();\r\n        // const authtoken = sessionStorage.getItem(\"auth-token\");\r\n        // if (!authtoken) {\r\n        //     navigate(\"/login\");\r\n        // }\r\n    }, [searchParams])\r\n\r\n    return (\r\n        <center>\r\n            <div  className=\"searchpage-container\">\r\n            <FindDoctorSearch onSearch={handleSearch} />\r\n            <div className=\"search-results-container\">\r\n            {isSearched ? (\r\n                <center>\r\n                    <h2>{filteredDoctors.length} doctors are available {searchParams.get('location')}</h2>\r\n                    <h3>Book appointments with minimum wait-time & verified doctor details</h3>\r\n                    {filteredDoctors.length > 0 ? (\r\n                    filteredDoctors.map(doctor => <DoctorCard className=\"doctorcard\" {...doctor} key={doctor.name} />)\r\n                    ) : (\r\n                    <p>No doctors found.</p>\r\n                    )}\r\n                </center>\r\n                ) : (\r\n                ''\r\n                )}\r\n            </div>\r\n        </div>\r\n        </center>\r\n    )\r\n}\r\n\r\nexport default InstantConsultation","/home/project/med_appt/src/config.js",[],[],"/home/project/med_appt/src/Components/DoctorCard/DoctorCard.js",["114","115"],[],"import React, { useEffect, useState } from 'react';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nimport './DoctorCard.css';\nimport AppointmentForm from '../AppointmentForm/AppointmentForm'\nimport { v4 as uuidv4 } from 'uuid';\n\nconst DoctorCard = ({ name, speciality, experience, ratings, profilePic }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [appointments, setAppointments] = useState([]);\n\n  //const appointments = ({name, phoneNumber,selectedSlot,appointmentDate,doctorName,doctorSpeciality});\n\n  const handleBooking = () => {\n    setShowModal(true);\n  };\n\n  const handleCancel = (appointmentId) => {\n    const updatedAppointments = appointments.filter((appointment) => appointment.id !== appointmentId);\n    setAppointments(updatedAppointments);\n    //localStorage.removeItem('storedAppointments');\n    const storedAppointments = JSON.stringify(updatedAppointments);\n    console.log(\"storedAppointmentsCancel:\", storedAppointments);\n    localStorage.setItem('storedAppointments', storedAppointments);\n  };\n\n  const handleFormSubmit = (appointmentData) => {\n    const newAppointment = {\n      id: uuidv4(),\n      ...appointmentData,\n    };\n    const updatedAppointments = [...appointments, newAppointment];\n    setAppointments(updatedAppointments);\n    setShowModal(false);\n    //localStorage.removeItem('storedAppointments');\n    const storedAppointments = JSON.stringify(updatedAppointments);\n    console.log(\"storedAppointmentsSubmit:\", storedAppointments);\n    localStorage.setItem('storedAppointments', storedAppointments);\n  };\n  \n  //console.log(\"appointments :\",appointments);\n\n  return (<div className=\"doctor-card-container\">\n      <div className=\"doctor-card-details-container\">\n          <div className=\"doctor-card-profile-image-container\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"46\" height=\"46\" fill=\"currentColor\" className=\"bi bi-person-fill\" viewBox=\"0 0 16 16\"> <path d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" /> </svg>\n          </div>\n          <div className=\"doctor-card-details\">\n              <div className=\"doctor-card-detail-name\">{name}</div>\n              <div className=\"doctor-card-detail-speciality\">{speciality}</div>\n              <div className=\"doctor-card-detail-experience\">{experience} years experience</div>\n              <div className=\"doctor-card-detail-consultationfees\">Ratings: {ratings}</div>\n          </div>\n          {/* for reference  */}\n          {/* <div>\n<button className='book-appointment-btn'>\n  <div>Book Appointment</div>\n<div>No Booking Fee</div>\n</button>\n</div> */}\n      </div>\n\n\n      <div className=\"doctor-card-options-container\">\n          <Popup\n              style={{ backgroundColor: '#FFFFFF' }}\n              trigger={<button className={`book-appointment-btn ${appointments.length > 0 ? 'cancel-appointment' : ''}`}>\n                  {appointments.length > 0 ? (\n                      <div>Cancel Appointment</div>\n                  ) : (\n                      <div>Book Appointment</div>\n                  )}\n                  <div>No Booking Fee</div>\n              </button>}\n              modal\n              open={showModal}\n              onClose={() => setShowModal(false)}\n          >\n              {(close) => (\n                  <div className=\"doctorbg\" style={{ height: '100vh', overflow: 'scroll' }}>\n                      <div>\n                          <div className=\"doctor-card-profile-image-container\">\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"46\" height=\"46\" fill=\"currentColor\" className=\"bi bi-person-fill\" viewBox=\"0 0 16 16\"> <path d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" /> </svg>\n                          </div>\n                          <div className=\"doctor-card-details\">\n                              <div className=\"doctor-card-detail-name\">{name}</div>\n                              <div className=\"doctor-card-detail-speciality\">{speciality}</div>\n                              <div className=\"doctor-card-detail-experience\">{experience} years experience</div>\n                              <div className=\"doctor-card-detail-consultationfees\">Ratings: {ratings}</div>\n                          </div>\n                      </div>\n\n                      {appointments.length > 0 ? (\n                          <>\n                              <h3 style={{ textAlign: 'center' }}>Appointment Booked!</h3>\n                              {appointments.map((appointment) => (\n                                  <div className=\"bookedInfo\" key={appointment.id}>\n                                      <p>Name: {appointment.name}</p>\n                                      <p>Phone Number: {appointment.phoneNumber}</p>\n                                      <button onClick={() => handleCancel(appointment.id)}>Cancel Appointment</button>\n                                  </div>\n                              ))}\n                          </>\n                      ) : (\n                          <AppointmentForm doctorName={name} doctorSpeciality={speciality} onSubmit={handleFormSubmit} />\n                      )}\n                  </div>\n              )}\n          </Popup>\n      </div>\n  </div>\n      \n  );\n};\n\nexport default DoctorCard;\n","/home/project/med_appt/src/Components/AppointmentForm/AppointmentForm.js",["116","117","118"],[],"import React, { useState } from 'react'\nimport DoctorCard from '../DoctorCard/DoctorCard';\n\nconst AppointmentForm = ({ doctorName, doctorSpeciality, onSubmit }) => {\n    const [name, setName] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [selectedSlot, setSelectedSlot] = useState('');\n    const [appointmentDate, setAppointmentDate] = useState('');\n   \n\n    const handleSlotSelection = (slot) => {\n        setSelectedSlot(slot);\n      };\n      const handleDateSelection = (date) => {\n          setAppointmentDate(date);\n        };\n    \n      const handleFormSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({name,phoneNumber,selectedSlot,appointmentDate,doctorName,doctorSpeciality });\n        setName('');\n        setPhoneNumber('');\n        setAppointmentDate('');\n        setSelectedSlot('');\n      };\n\n    return (\n      <form onSubmit={handleFormSubmit} className=\"appointment-form\">\n            <div className=\"form-group\">\n                <label htmlFor=\"name\">Name:</label>\n                <input\n                    type=\"text\"\n                    id=\"name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    required />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"phoneNumber\">Phone Number:</label>\n                <input\n                    type=\"tel\"\n                    id=\"phoneNumber\"\n                    value={phoneNumber}\n                    onChange={(e) => setPhoneNumber(e.target.value)}\n                    required />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"appointmentDate\">Date of Appointment</label>\n                <input\n                    type=\"date\"\n                    id=\"appointmentDate\"\n                    value={appointmentDate}\n                    onChange={(e) => setAppointmentDate(e.target.value)}\n                    required />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"selectedSlot\">Book Time Slot</label>\n                <input\n                    type=\"time\"\n                    id=\"selectedSlot\"\n                    value={selectedSlot}\n                    onChange={(e) => setSelectedSlot(e.target.value)}\n                    required />\n            </div>\n            <button type=\"submit\">Book Now</button>\n        </form>\n    );\n  };\n\nexport default AppointmentForm\n","/home/project/med_appt/src/Components/ReviewForm/ReviewForm.js",[],[],"/home/project/med_appt/src/Components/ProfileCard/ProfileCard.js",["119"],[],"import React, { useEffect, useState } from \"react\";\nimport { API_URL } from \"../../config\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./ProfileCard.css\";\n\nconst ProfileForm = () => {\n  const [userDetails, setUserDetails] = useState({});\n const [updatedDetails, setUpdatedDetails] = useState({});\n const [editMode, setEditMode] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const authtoken = sessionStorage.getItem(\"auth-token\");\n    if (!authtoken) {\n      navigate(\"/login\");\n    } else {\n      fetchUserProfile();\n    }\n  }, [navigate]);\n\n  const fetchUserProfile = async () => {\n    try {\n      const authtoken = sessionStorage.getItem(\"auth-token\");\n      const email = sessionStorage.getItem(\"email\"); // Get the email from session storage\n\n  if (!authtoken) {\n    navigate(\"/login\");\n  } else {\n    const response = await fetch(`${API_URL}/api/auth/user`, {\n      headers: {\n        \"Authorization\": `Bearer ${authtoken}`,\n        \"Email\": email, // Add the email to the headers\n      },\n    });\n    if (response.ok) {\n      const user = await response.json();\n      setUserDetails(user);\n      setUpdatedDetails(user);\n    } else {\n      // Handle error case\n      throw new Error(\"Failed to fetch user profile\");\n    }\n  }\n} catch (error) {\n  console.error(error);\n  // Handle error case\n}\n};\n\nconst handleEdit = () => {setEditMode(true);};\n\nuseEffect(() => {\n    console.log(\"editMode:\", editMode);\n  }, [editMode]);\n\nconst handleInputChange = (e) => {\nsetUpdatedDetails({\n  ...updatedDetails,\n  [e.target.name]: e.target.value,\n});\n};\nconst handleSubmit = async (e) => {\n  e.preventDefault();\n\n  try {\n    const authtoken = sessionStorage.getItem(\"auth-token\");\n    const email = sessionStorage.getItem(\"email\"); // Get the email from session storage\n\n    if (!authtoken || !email) {\n      navigate(\"/login\");\n      return;\n    }\n\n    const payload = { ...updatedDetails };\n    const response = await fetch(`${API_URL}/api/auth/user`, {\n      method: \"PUT\",\n      headers: {\n        \"Authorization\": `Bearer ${authtoken}`,\n        \"Content-Type\": \"application/json\",\n        \"Email\": email,\n      },\n      body: JSON.stringify(payload),\n    });\n\n    if (response.ok) {\n      // Update the user details in session storage\n      sessionStorage.setItem(\"name\", updatedDetails.name);\n      sessionStorage.setItem(\"phone\", updatedDetails.phone);\n\n      setUserDetails(updatedDetails);\n      setEditMode(false);\n      // Display success message to the user\n      alert(`Profile Updated Successfully!`);\n      navigate(\"/\");\n    } else {\n      // Handle error case\n      throw new Error(\"Failed to update profile\");\n    }\n  } catch (error) {\n    console.error(error);\n    // Handle error case\n  }\n};\n\nreturn (\n<div className=\"profile-container\">\n  {editMode ? (\n<form onSubmit={handleSubmit}>\n<label>\n  Email\n  <input\n    type=\"email\"\n    name=\"email\"\n    value={userDetails.email}\n    disabled // Disable the email field\n  />\n</label>\n<label>\n         Name\n         <input\n           type=\"text\"\n           name=\"name\"\n           value={updatedDetails.name}\n           onChange={handleInputChange}\n         />\n       </label>\n       <label>\n         Phone\n         <input\n           type=\"text\"\n           name=\"phone\"\n           value={updatedDetails.phone}\n           onChange={handleInputChange}\n         />\n       </label>\n       <label>\n         Email\n         <input\n           type=\"text\"\n           name=\"email\"\n           value={updatedDetails.email}\n           onChange={handleInputChange}\n         />\n       </label>\n<button type=\"submit\">Save</button>\n</form>\n) : (\n<div className=\"profile-details\">\n<h1>Welcome, {userDetails.name}</h1>\n<p> <b>Email:</b> {userDetails.email}</p>\n        <p><b>Phone:</b> {userDetails.phone}</p>\n\n<button onClick={handleEdit}>Edit</button>\n</div>\n)}\n</div>\n);\n};\n\nexport default ProfileForm;\n","/home/project/med_appt/src/Components/ReportsLayout/ReportsLayout.js",["120"],[],"import React, { useState } from \"react\";\nimport \"./ReportsLayout.css\";\nconst ReportsLayout = () => {\n  // Sample data for the reports (you can replace it with actual data)\n  const reportsData = [\n    { id: 1, doctorName: \"Dr. Smith\", doctorSpeciality: \"Cardiologist\" },\n    { id: 2, doctorName: \"Dr. Johnson\", doctorSpeciality: \"Dermatologist\" },\n    // Add more reports as needed\n  ];\n\n  const handleViewReport = (reportId) => {\n    // Handle logic for viewing the report\n    console.log(`Viewing report ${reportId}`);\n  };\n\n  const handleDownloadReport = (reportId) => {\n    // Handle logic for downloading the report\n    console.log(`Downloading report ${reportId}`);\n  };\n\n  return (\n    <div className=\"reports-card\">\n      <h2>Your Reports</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Serial Number</th>\n            <th>Doctor Name</th>\n            <th>Doctor Speciality</th>\n            <th>View Report</th>\n            <th>Download Report</th>\n          </tr>\n        </thead>\n        <tbody>\n          {reportsData.map((report) => (\n            <tr key={report.id}>\n              <td>{report.id}</td>\n              <td>{report.doctorName}</td>\n              <td>{report.doctorSpeciality}</td>\n              <td>\n                <button onClick={() => handleViewReport(report.id)}>\n                  View Report\n                </button>\n              </td>\n              <td>\n                <button onClick={() => handleDownloadReport(report.id)}>\n                  Download Report\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ReportsLayout;\n",{"ruleId":"121","severity":1,"message":"122","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":26},{"ruleId":"121","severity":1,"message":"125","line":11,"column":8,"nodeType":"123","messageId":"124","endLine":11,"endColumn":27},{"ruleId":"126","severity":1,"message":"127","line":23,"column":40,"nodeType":"128","messageId":"129","endLine":23,"endColumn":55},{"ruleId":"126","severity":1,"message":"130","line":24,"column":60,"nodeType":"128","messageId":"129","endLine":24,"endColumn":70},{"ruleId":"121","severity":1,"message":"131","line":52,"column":11,"nodeType":"123","messageId":"124","endLine":52,"endColumn":19},{"ruleId":"132","severity":1,"message":"133","line":59,"column":8,"nodeType":"134","endLine":59,"endColumn":22,"suggestions":"135"},{"ruleId":"121","severity":1,"message":"136","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":14},{"ruleId":"121","severity":1,"message":"136","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":14},{"ruleId":"132","severity":1,"message":"137","line":17,"column":6,"nodeType":"134","endLine":17,"endColumn":8,"suggestions":"138"},{"ruleId":"121","severity":1,"message":"139","line":3,"column":23,"nodeType":"123","messageId":"124","endLine":3,"endColumn":31},{"ruleId":"121","severity":1,"message":"140","line":13,"column":26,"nodeType":"123","messageId":"124","endLine":13,"endColumn":41},{"ruleId":"121","severity":1,"message":"141","line":7,"column":10,"nodeType":"123","messageId":"124","endLine":7,"endColumn":18},{"ruleId":"121","severity":1,"message":"142","line":8,"column":10,"nodeType":"123","messageId":"124","endLine":8,"endColumn":20},{"ruleId":"121","severity":1,"message":"131","line":52,"column":11,"nodeType":"123","messageId":"124","endLine":52,"endColumn":19},{"ruleId":"132","severity":1,"message":"133","line":59,"column":8,"nodeType":"134","endLine":59,"endColumn":22,"suggestions":"143"},{"ruleId":"121","severity":1,"message":"122","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":26},{"ruleId":"121","severity":1,"message":"144","line":14,"column":9,"nodeType":"123","messageId":"124","endLine":14,"endColumn":22},{"ruleId":"121","severity":1,"message":"145","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":18},{"ruleId":"121","severity":1,"message":"146","line":11,"column":11,"nodeType":"123","messageId":"124","endLine":11,"endColumn":30},{"ruleId":"121","severity":1,"message":"147","line":14,"column":13,"nodeType":"123","messageId":"124","endLine":14,"endColumn":32},{"ruleId":"132","severity":1,"message":"148","line":18,"column":6,"nodeType":"134","endLine":18,"endColumn":16,"suggestions":"149"},{"ruleId":"121","severity":1,"message":"150","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'BookingConsultation' is defined but never used.","react/jsx-pascal-case","Imported JSX component Landing_Page must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Sign_Up must be in PascalCase or SCREAMING_SNAKE_CASE","'navigate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDoctorsDetails'. Either include it or remove the dependency array.","ArrayExpression",["151"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["152"],"'Navigate' is defined but never used.","'setSpecialities' is assigned a value but never used.","'username' is assigned a value but never used.","'doctorData' is assigned a value but never used.",["153"],"'handleBooking' is assigned a value but never used.","'DoctorCard' is defined but never used.","'handleSlotSelection' is assigned a value but never used.","'handleDateSelection' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUserProfile'. Either include it or remove the dependency array.",["154"],"'useState' is defined but never used.",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"155","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [getDoctorsDetails, searchParams]",{"range":"162","text":"163"},"Update the dependencies array to be: [navigate]",{"range":"164","text":"165"},{"range":"166","text":"163"},"Update the dependencies array to be: [fetchUserProfile, navigate]",{"range":"167","text":"168"},[2017,2031],"[getDoctorsDetails, searchParams]",[417,419],"[navigate]",[2107,2121],[572,582],"[fetchUserProfile, navigate]"]