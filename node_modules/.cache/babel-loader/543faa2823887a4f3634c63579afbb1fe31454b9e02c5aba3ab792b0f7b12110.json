{"ast":null,"code":"var _jsxFileName = \"/home/project/med_appt/src/Components/Notification/Notification.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../Navbar/Navbar';\nimport DoctorCard from '../DoctorCard/DoctorCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Notification = ({\n  children,\n  app\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [doctorData, setDoctorData] = useState([]);\n  const [appointmentData, setAppointmentData] = useState(null);\n  const [appointments, setAppointments] = useState(() => appointments);\n  useEffect(() => {\n    const storedUsername = sessionStorage.getItem('email');\n    const storedDoctorData = JSON.parse(localStorage.getItem('appointments'));\n    //console.log(\"storedDoctorData :\",storedDoctorData.name);\n    const storedAppointmentData = JSON.parse(localStorage.getItem('appointmentData'));\n    if (storedUsername) {\n      setIsLoggedIn(true);\n      setUsername(storedUsername);\n    }\n    if (storedDoctorData) {\n      setDoctorData(storedDoctorData);\n    }\n    if (storedAppointmentData) {\n      setAppointmentData(storedAppointmentData);\n    }\n    //console.log(\"storedAppointmentData.doctorName :\",storedAppointmentData.doctorName);\n  }, []);\n  console.log(\"appointments :\", appointments);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), children, isLoggedIn && appointments && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"appointment-card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"appointment-card__content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"appointment-card__title\",\n            children: \"Appointment Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"appointment-card__message\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Doctor:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), \" \", appointments.doctorName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Notification, \"djwEYYDqt6KCy8bN051yxnqnps8=\");\n_c = Notification;\nexport default Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","DoctorCard","jsxDEV","_jsxDEV","Fragment","_Fragment","Notification","children","app","_s","isLoggedIn","setIsLoggedIn","username","setUsername","doctorData","setDoctorData","appointmentData","setAppointmentData","appointments","setAppointments","storedUsername","sessionStorage","getItem","storedDoctorData","JSON","parse","localStorage","storedAppointmentData","console","log","fileName","_jsxFileName","lineNumber","columnNumber","className","doctorName","_c","$RefreshReg$"],"sources":["/home/project/med_appt/src/Components/Notification/Notification.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Navbar from '../Navbar/Navbar';\nimport DoctorCard from '../DoctorCard/DoctorCard';\n\nconst Notification = ({ children,app }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [doctorData, setDoctorData] = useState([]);\n  const [appointmentData, setAppointmentData] = useState(null);\n  const [appointments, setAppointments] = useState(() =>appointments);\n\n  useEffect(() => {\n    const storedUsername = sessionStorage.getItem('email');\n    const storedDoctorData = JSON.parse(localStorage.getItem('appointments'));\n    //console.log(\"storedDoctorData :\",storedDoctorData.name);\n    const storedAppointmentData = JSON.parse(localStorage.getItem('appointmentData'));\n\n\n    if (storedUsername) {\n      setIsLoggedIn(true);\n      setUsername(storedUsername);\n    }\n\n    if (storedDoctorData) {setDoctorData(storedDoctorData);}\n\n    if (storedAppointmentData) {\n      setAppointmentData(storedAppointmentData);\n    }\n    //console.log(\"storedAppointmentData.doctorName :\",storedAppointmentData.doctorName);\n  }, []);\n\n \n\nconsole.log(\"appointments :\",appointments);\n\n  return (\n    <div>\n      <Navbar ></Navbar>\n      {children}\n      {isLoggedIn && appointments && (\n        <>\n          <div className=\"appointment-card\">\n            <div className=\"appointment-card__content\">\n              <h3 className=\"appointment-card__title\">Appointment Details</h3>\n              <p className=\"appointment-card__message\">\n                <strong>Doctor:</strong> {appointments.doctorName}\n              </p>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Notification;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}